/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graph;

import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;
import javafx.stage.Stage;
import javafx.util.Duration;

/**
 *
 * @author heathernew
 */
public class Graph extends Application {
    
    @Override
    public void start(Stage primaryStage) {
        
        Circle c = new Circle(200, 200, 1);
        
        boolean[][] available = new boolean[16][16];
        for(int i = 0; i < 16; i++){
            for(int j = 0; j < 16; j++)
                available[i][j] = true;
        }
         
        
        Pane root = new Pane();
        for(int i = 0; i < 400; i += 25){
            Line l = new Line(i, 0, i, 400);
            Line l2 = new Line(0, i, 400, i);
            l.setOpacity(.1);
            l2.setOpacity(.1);
            root.getChildren().addAll(l, l2);
        }
        
        Timeline animation = new Timeline(new KeyFrame(Duration.millis(10), e -> {
            int x = (int) c.getCenterX();
            int y = (int) c.getCenterY();
            int oldx = x;
            int oldy = y;
            switch((int)(Math.random() * 4) + 1){
                case 1: 
                    if(available[(x + 25)/25][y / 25] && x < 400 & y < 400)
                        x += 25;
                    break;
                case 2: 
                    if(available[(x - 25)/25][y / 25] && x < 400 & y < 400)
                        x -= 25;
                    break;
                case 3: 
                    if(available[(x)/25][(y + 25) / 25] && x < 400 & y < 400)
                        y += 25;
                    break;
                case 4: 
                    if(available[(x)/25][(y - 25) / 25] && x < 400 & y < 400)
                        y -= 25;
                    break;
            }
            root.getChildren().add(new Line(oldx, oldy, x, y));
            c.setCenterX(x);
            c.setCenterY(y);
            available[x/25][y/25] = false;
        }));
        animation.setCycleCount(Timeline.INDEFINITE);
        animation.play();
        
        
        Scene scene = new Scene(root, 400, 400);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
}
