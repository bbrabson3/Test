import java.util.ArrayList;

public class KnapSack {

	public static void main(String[] args) {
		
		int[] wt = {1,4,2,3,5,5,6,9,7,8,10};
		int[] val = {1,22,20,15,30,24,54,21,32,18,25};
		int total = 30;
		int[][] dp = new int[val.length + 1][total + 1];
		
		for(int i = 0; i <= total; i++)
			dp[0][i] = i;
		for(int i = 1; i <= total; i++)
			dp[1][i] = val[0];
		
		for(int i = 2; i < val.length + 1; i++) {
			for(int j = 0; j <= total; j++) {
				if(j < wt[i - 1]) {
					dp[i][j] = dp[i - 1][j];
				}
				else{
					dp[i][j] = Math.max(val[i-1] + dp[i-1][j-wt[i-1]], dp[i-1][j]);
				}
			}
		}
		
		for(int i = 0; i < val.length + 1; i++){
			for (int j = 0; j < total + 1; j++){
				System.out.print(dp[i][j] + " ");
			}
			System.out.println();
		}
		
		int amount = total;
		int col = amount, row = val.length;
		System.out.println("Max value with a capacity of " + amount + ":");
		
		ArrayList<Integer> items = new ArrayList<>();
		int max = 0;
		
		while(col > 0) {
			if(row == 1 && col == 1){
				System.out.print(val[row - 1] + " + ");
				items.add(val[row - 1]);
				col -= wt[row - 1];
			}
			if (row > 0 && dp[row][col] == dp[row - 1][col]) {
				row--;
			} else{
				System.out.print(val[row - 1] + " + ");
				items.add(val[row - 1]);
				col -= wt[row - 1];
			}
		}
		for(int i = 0; i < items.size(); i++)
			max += items.get(i);
			
		System.out.print("= " + max);
		
	}

}
